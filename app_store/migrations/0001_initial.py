# Generated by Django 4.1.4 on 2023-01-06 22:58

import django.core.validators
import django.db.models.deletion
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app_account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('slug', models.SlugField(default='', max_length=100, unique=True)),
                ('total_rate', models.FloatField(default=0.0)),
                ('status', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/brands')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(default=None, max_length=100, unique=True)),
                ('status', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/categories')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent',
                 mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            related_name='children', to='app_store.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters',
                                               to='app_store.category')),
            ],
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, null=True)),
                ('code', models.CharField(max_length=7)),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status',
                 models.CharField(choices=[('p', 'Publish'), ('r', 'Reviewing'), ('b', 'Denied(Delete comment)')],
                                  default='r', max_length=1)),
            ],
            options={
                'ordering': ['-product'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('product_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('price', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('sell_price',
                 models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('total_rate', models.FloatField(default=0.0)),
                ('hits_count', models.PositiveIntegerField(blank=True, default=0)),
                ('total_quantity',
                 models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('on_sell', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('thumbnail', models.ImageField(null=True, upload_to='images/products')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status',
                 models.IntegerField(blank=True, choices=[(1, 'In Stock'), (2, 'Coming Soon'), (3, 'Out of Stock')],
                                     null=True)),
                ('brand',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_store.brand')),
                ('category',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products',
                                   to='app_store.category')),
            ],
            options={
                'ordering': ['-status'],
            },
        ),
        migrations.CreateModel(
            name='Sizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, null=True)),
                ('code', models.CharField(max_length=7)),
                ('category', models.ManyToManyField(related_name='Sizes', to='app_store.category')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
            },
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity',
                 models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('status',
                 models.IntegerField(blank=True, choices=[(1, 'In Stock'), (2, 'Coming Soon'), (3, 'Out of Stock')],
                                     null=True)),
                ('color', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                            related_name='color', to='app_store.colors')),
                ('product',
                 models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='quantities',
                                   to='app_store.product')),
                ('size', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='size',
                                           to='app_store.sizes')),
            ],
            options={
                'verbose_name': 'Quantity',
                'verbose_name_plural': 'Quantities',
            },
        ),
        migrations.CreateModel(
            name='ProductHit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_account.ipaddress')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_store.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='hits',
            field=models.ManyToManyField(related_name='hits', through='app_store.ProductHit',
                                         to='app_account.ipaddress'),
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.FileField(upload_to='images/products')),
                ('product',
                 models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='images',
                                   to='app_store.product')),
            ],
        ),
        migrations.CreateModel(
            name='LikedComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now=True)),
                ('comment',
                 models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='likes',
                                   to='app_store.comment')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE,
                                           related_name='liked_comment', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FilterChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('kw', models.CharField(max_length=200)),
                ('filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices',
                                             to='app_store.categoryfilter')),
            ],
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail_title', models.CharField(max_length=100)),
                ('detail', models.CharField(max_length=250)),
                ('put_in_header', models.BooleanField(default=False)),
                ('product',
                 models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='details',
                                   to='app_store.product')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments',
                                    to='app_store.product'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments',
                                    to=settings.AUTH_USER_MODEL),
        ),
    ]
